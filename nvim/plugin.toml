[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
      source ~/dotfiles/nvim/plugins/fern.rc.vim
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'arcticicestudio/nord-vim'

[[plugins]]
repo = 'aereal/vim-colors-japanesque'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = { 'colorscheme': 'wombat' }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = {
        \ 'python': {
        \           'command': 'python3'
        \ },
        \ '_' : {
            \ 'runner' : 'vimproc',
            \ 'runner/vimproc/updatetime' : 40,
            \ 'outputter/buffer/running_mark' : 'RUN',
            \ 'outputter' : 'error',
            \ 'outputter/error/success' : 'buffer_legacy',
            \ 'outputter/error/error'   : 'quickfix',
            \ 'outputter/buffer_legacy/split' : ':botright 8sp',
        \ }
    \}

    let g:quickrun_no_default_key_mappings = 1
    nnoremap <Leader>e :cclose<CR>:write<CR>:QuickRun<CR>
'''

[[plugins]]
repo= 'Shougo/vimproc.vim'
build = 'make'

# [[plugins]]
# repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'preservim/tagbar'
hook_add = '''
    nmap <Leader>t :TagbarToggle<CR>
    let g:tagbar_map_togglesort = "S"
    let g:tagbar_width = 60
'''

[[plugins]]
repo = 'eiji03aero/quick-notes'
hook_add = '''
    let g:quick_notes_directory = '~/.cache/quick-notes/'
    let g:quick_notes_suffix = 'md'
'''

# [[plugins]]
# repo = 'chrisbra/csv.vim'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_add = '''
    let g:vsnip_snippet_dir = expand('~/.config/vsnip')
    " Expand
    " imap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'
    " smap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'

    " Expand or jump
    imap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'
    smap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'

    " Jump forward or backward
    imap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
    smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
    imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
    smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'

    " Select or cut text to use as $TM_SELECTED_TEXT in the next snippet.
    " See https://github.com/hrsh7th/vim-vsnip/pull/50
    nmap        s   <Plug>(vsnip-select-text)
    xmap        s   <Plug>(vsnip-select-text)
    nmap        S   <Plug>(vsnip-cut-text)
    xmap        S   <Plug>(vsnip-cut-text)

    let g:vsnip_filetypes = {}
    let g:vsnip_filetypes.plaintex = ['tex']
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
